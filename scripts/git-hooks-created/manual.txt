create folder script on root

create folder .metrics on root

create a pre-commit file inside scripts/git-hooks-created (to have a reference for future projects)

  put this inside the pre-commit
    #!/bin/sh
    # goes in .git/hooks/pre-commit 
    # no extension needed in the file
    # but you will need to make it executable -> chmod +x .git/hooks/pre-commit
    #
    # Run the metric updater every commit
    "$(git rev-parse --show-toplevel)/scripts/update_lines_added.sh"

create scripts/update_lines_added.sh

  put this inside the update_lines_added
    #!/usr/bin/env bash
    set -euo pipefail # fail fast flags

    FILE=".metrics/total_lines_added.txt"
    mkdir -p .metrics

    # # Get current total (if any)
    # total=0
    # [[ -f "$FILE" ]] && read -r total < "$FILE"

    # ----- get current total (default 0) -----
    if [[ -s "$FILE" ]]; then             # -s = file exists and is non-empty
      total=$(<"$FILE")                  # fast cat
      # If the file somehow contains non-digits, fall back to 0
      [[ "$total" =~ ^[0-9]+$ ]] || total=0
    else
      total=0
    fi

    # Lines that will be added by *this* commit
    # added=$(git diff --cached --numstat | awk '{sum += $1} END {print sum}')
    added=$(git diff --cached --numstat \
            | awk '$3 != ".metrics/total_lines_added.txt" {sum+=$1} END{print sum}')


    # If nothing new is staged, exit quietly so other hooks can run
    [[ "$added" -eq 0 ]] && exit 0

    # Write updated cumulative total
    new_total=$((total + added))
    echo "$new_total" > "$FILE"

    # OPTIONAL progress message
    echo "Added $added lines |  New total â†’ $new_total"

    # stages the updated metric file
    git add "$FILE"

copy the pre-commit file created to your repo in .git/hooks/pre-commit

give the update_lines_added.sh executable access

  chmod +x .git/hooks/pre-commit

then every time you do a commit you will update a file